import ssl
from django.core.mail import EmailMessage
from django.utils.html import format_html
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib import colors
from reportlab.platypus import Table, TableStyle
import os
from django.conf import settings
from email.mime.image import MIMEImage
from django.core.mail import get_connection
from .models import ShippingAddress
from num2words import num2words

from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont

# ƒêƒÉng k√Ω font tr∆∞·ªõc khi t·∫°o Canvas
pdfmetrics.registerFont(TTFont('Roboto', os.path.join(settings.BASE_DIR, 'app/static/Roboto/static/Roboto-Regular.ttf')))

pdfmetrics.registerFont(TTFont('Roboto-Bold', os.path.join(settings.BASE_DIR, 'app/static/Roboto/static/Roboto-Bold.ttf')))

pdfmetrics.registerFont(TTFont('Roboto-ExtraBold', os.path.join(settings.BASE_DIR, 'app/static/Roboto/static/Roboto-ExtraBold.ttf')))

def truncate_text(text, max_length=30):
    if len(text) > max_length:
        return text[:max_length] + "..."
    return text

def generate_invoice(order):
    """T·∫°o h√≥a ƒë∆°n PDF chuy√™n nghi·ªáp"""
    invoice_dir = os.path.join(settings.BASE_DIR, "invoices")
    os.makedirs(invoice_dir, exist_ok=True)
    pdf_path = os.path.join(invoice_dir, f"invoice_{order.id}.pdf")

    c = canvas.Canvas(pdf_path, pagesize=letter)
    c.setFont("Roboto-Bold", 14)
    logo_path = os.path.join(settings.BASE_DIR, "app/static/app/images/logocrop.png")
    if os.path.exists(logo_path):
        c.drawImage(logo_path, 55, 710, width=55, height=55, mask='auto')

    c.setFillColor("#1d3557")
    c.drawCentredString(315, 750, "H√ìA ƒê∆†N ƒêI·ªÜN T·ª¨ / E-INVOICE")
    c.setFillColor(colors.black)
    c.setFont("Roboto", 12)
    c.drawString(120, 715, "G·ªëm Ph√∫c Gia Ti√™n")
    c.drawString(120, 700, "669 ƒê·ªó M∆∞·ªùi, Khu ph·ªë 6, Th·ªß ƒê·ª©c, TP.HCM")
    c.drawString(120, 685, "Hotline: 0919 694 180 | Facebook: gomphucgiatien")
    c.setFont("Roboto-Bold", 12)
    c.drawString(420, 715, f"M√£ ƒë∆°n: {order.id}")
    c.drawString(420, 700, f"Ng√†y: {order.date_order.strftime('%d-%m-%Y')}")
    c.setFont("Roboto", 11)
    c.drawString(120, 660, f"Kh√°ch h√†ng: {order.customer.user.get_full_name() if order.customer else '·∫®n danh'}")
    shipping_address = ShippingAddress.objects.filter(customer=order.customer).order_by('-date_added').first()
    c.drawString(120, 645, f"ƒê·ªãa ch·ªâ nh·∫≠n: {shipping_address.address if shipping_address else 'N/A'}")

    # B·∫£ng s·∫£n ph·∫©m
    data = [["STT", "S·∫£n ph·∫©m", "SL", "ƒê∆°n gi√°", "Th√†nh ti·ªÅn"]]
    for i, item in enumerate(order.orderitem_set.all()):
        if item.product:
            item_name = truncate_text(item.product.name, max_length=36)
            price = item.product.price
            data.append([
                i + 1,
                item_name,
                item.quantity,
                f"{int(price):,}‚Ç´",
                f"{int(item.get_total):,}‚Ç´"
            ])
    data.append(["", "Gi·∫£m gi√°", "", "", f"- {int(order.discount_amount):,}‚Ç´"])
    data.append(["", "T·ªïng c·ªông", "", "", f"{int(order.final_total):,}‚Ç´"])

    # V·∫Ω b·∫£ng
    table = Table(data, colWidths=[38, 200, 52, 85, 100])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), "#48607c"),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
        ('GRID', (0, 0), (-1, -1), 0.7, colors.black),
        ('FONTNAME', (0, 0), (-1, 0), 'Roboto-Bold'),
        ('FONTNAME', (0, 1), (-1, -1), 'Roboto'),
        ('FONTSIZE', (0, 0), (-1, -1), 10),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 7),
    ]))

    table.wrapOn(c, 120, 500)
    table_width = sum([38, 200, 52, 85, 100])
    table_x = (letter[0] - table_width) / 2
    table.drawOn(c, table_x, 500)

    c.setFont("Roboto-ExtraBold", 11)
    c.setFillColor("#1d3557")
    c.drawString(120, 475, f"S·ªë ti·ªÅn b·∫±ng ch·ªØ: {num2words(order.final_total, lang='vi').capitalize()} ƒë·ªìng")
    c.setFillColor(colors.black)

    c.drawString(130, 440, "Kh√°ch h√†ng")
    c.drawString(420, 440, "ƒê·∫°i di·ªán c·ª≠a h√†ng")
    c.setFont("Roboto", 10)
    c.setFillColor("#a7a7a7")
    c.drawString(120, 405, "C·∫£m ∆°n b·∫°n ƒë√£ tin ch·ªçn G·ªëm Ph√∫c Gia Ti√™n. H·∫πn g·∫∑p l·∫°i b·∫°n ·ªü c√°c ƒë∆°n h√†ng ti·∫øp theo!")
    c.save()
    return pdf_path



def send_invoice_email(customer_email, pdf_path, order):
    """G·ª≠i email h√≥a ƒë∆°n v·ªõi logo, m·∫´u ƒë·∫πp, l·ªùi c·∫£m ∆°n chuy√™n nghi·ªáp."""

    logo_path = os.path.join(settings.BASE_DIR, "app/static/app/images/logocrop.png")
    customer_name = order.customer.user.get_full_name() if order.customer else "Qu√Ω kh√°ch h√†ng"

    subject = f"üßæ [G·ªëm Ph√∫c Gia Ti√™n] ƒê∆°n h√†ng #{order.id} c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!"
    message = format_html(
        """
        <div style="font-family: 'Segoe UI', Arial, sans-serif; border-radius:16px; border: 1px solid #e0e0e0; padding: 32px 24px; max-width: 540px; background: #fafaf9; margin:auto;">
            <img src="cid:delisora_logo" style="width:90px; height:auto; margin-bottom:12px;" alt="G·ªëm Ph√∫c Gia Ti√™n"/>
            <h2 style="color: #19435f; margin-bottom:10px; font-size: 2em;">C·∫£m ∆°n b·∫°n ƒë√£ tin ch·ªçn G·ªëm Ph√∫c Gia Ti√™n!</h2>
            <p style="font-size:1.13em; text-align: left;">
                Xin ch√†o <b>{name}</b>,<br>
                Ch√∫ng t√¥i tr√¢n tr·ªçng th√¥ng b√°o ƒë∆°n h√†ng <b>#{order_id}</b> c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n.<br>
                Vui l√≤ng xem h√≥a ƒë∆°n chi ti·∫øt ·ªü file ƒë√≠nh k√®m.<br>
            </p>
            <ul style="text-align:left; margin-left:1em;">
                <li>Ng√†y ƒë·∫∑t: <b>{order_date}</b></li>
                <li>Gi√° tr·ªã ƒë∆°n h√†ng: <b>{order_total:,.0f}‚Ç´</b></li>
                <li>Ph∆∞∆°ng th·ª©c thanh to√°n: <b>{payment}</b></li>
            </ul>
            <p style="font-size:1.04em; color:#375c7d; text-align:left;">
                ƒê·ªôi ng≈© G·ªëm Ph√∫c Gia Ti√™n lu√¥n mong mu·ªën mang ƒë·∫øn cho b·∫°n nh·ªØng s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng &amp; tr·∫£i nghi·ªám t·ªët nh·∫•t.<br>
                N·∫øu c·∫ßn h·ªó tr·ª£, li√™n h·ªá Hotline <b>0919 694 180</b> ho·∫∑c tr·∫£ l·ªùi email n√†y.
            </p>
            <div style="color:#888; font-size:0.97em; margin-top:30px;">
                Tr√¢n tr·ªçng,<br>
                <b>G·ªëm Ph√∫c Gia Ti√™n</b><br>
                669 ƒê·ªó M∆∞·ªùi, Khu ph·ªë 6, Th·ªß ƒê·ª©c, TP. HCM<br>
                Facebook: <a href="https://facebook.com/gomphucgiatien">facebook.com/gomphucgiatien</a>
            </div>
        </div>
        """.format(
            name=customer_name,
            order_id=order.id,
            order_date=order.date_order.strftime('%d/%m/%Y'),
            order_total=float(order.final_total),
            payment=order.get_payment_method_display()
        )
    )

    # Email connection nh∆∞ c≈©
    connection = get_connection(
        host=settings.EMAIL_HOST,
        port=settings.EMAIL_PORT,
        username=settings.EMAIL_HOST_USER,
        password=settings.EMAIL_HOST_PASSWORD,
        use_tls=True
    )
    connection.ssl_context.check_hostname = False
    connection.ssl_context.verify_mode = ssl.CERT_NONE

    email = EmailMessage(subject, message, settings.EMAIL_HOST_USER, [customer_email], connection=connection)
    email.content_subtype = "html"

    # ƒê√≠nh k√®m logo n·∫øu t·ªìn t·∫°i
    if os.path.exists(logo_path):
        with open(logo_path, "rb") as img:
            logo = MIMEImage(img.read())
            logo.add_header("Content-ID", "<delisora_logo>")
            logo.add_header("Content-Disposition", "inline")
            logo.add_header("Content-Type", "image/png")
            email.attach(logo)

    # ƒê√≠nh k√®m h√≥a ƒë∆°n PDF n·∫øu t·ªìn t·∫°i
    if os.path.exists(pdf_path):
        with open(pdf_path, "rb") as pdf:
            email.attach(f"invoice_{order.id}.pdf", pdf.read(), "application/pdf")

    email.send()



